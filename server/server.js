const express = require('express');
const cors = require('cors');
const multer = require('multer');
const fetch = require('node-fetch');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

const app = express();
const PORT = 3001;

// Middleware
app.use(cors());
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// Multer for handling file uploads
const upload = multer({
  limits: {
    fileSize: 5 * 1024 * 1024, // 5MB limit
  },
});

// No PDF conversion needed - Claude API supports PDF directly!

// Claude API endpoint
app.post('/api/process-payslip', async (req, res) => {
  try {
    const { base64Data, mediaType, apiKey } = req.body;
    
    const claudeApiKey = apiKey || process.env.CLAUDE_API_KEY;
    
    if (!claudeApiKey) {
      return res.status(400).json({ error: 'נדרש API Key של Claude. הוסף מפתח או הגדר במשתנה סביבה' });
    }

    // Claude API supports PDF directly - no conversion needed!

    const payload = {
      model: "claude-3-5-sonnet-20241022",  // Updated model with PDF support
      max_tokens: 4000,
      messages: [
        {
          role: "user",
          content: [
            {
              type: "text",
              text: `אתה מומחה OCR מתקדם המתמחה בתלושי שכר ישראליים. תפקידך לחלץ מידע מדויק מתמונות תלושי שכר ולסווג את ההכנסות.
			  
🎯 MISSION: קרא את התלוש בזהירות קיצונית וחלץ כל מידע רלוונטי

📋 מבנה תלוש שכר ישראלי טיפוסי:
- פרטי עובד: שם, ת.ז, מספר עובד, חודש/שנה
- הכנסות: טבלה עם תיאור, כמות, תעריף, סכום
- ניכויים: מס הכנסה, ביטוח לאומי, פנסיה
- סיכום: ברוטו, ניכויים, נטו

🔍 שלבי חילוץ OCR:

שלב 1: זיהוי מבנה הטבלה בעברית
**חשוב מאוד - מבנה טבלה עברית:**
- התיאור נמצא בעמודה הימנית ביותר (כי עברית מימין לשמאל)
- העמודות משמאל לימין בדרך כלל: **סכום סופי** ← תעריף ← כמות ← תיאור
- **עמודת הסכומים היא השמאלית ביותר או הסמוכה לשמאל**
- **לא העמודה הימנית!**

שלב 2: חילוץ פרטי עובד
- שם העובד (בדרך כלל באזור עליון)
- מספר ת.ז (9 ספרות)
- מספר עובד
- חודש ושנת השכר
- שם המעסיק/חברה

שלב 3: חילוץ הכנסות - קרא כל שורה!
**זיהוי נכון של עמודות:**
1. **עמודה ימנית**: תיאור הפריט (עברית/ערבית)
2. **עמודות אמצע**: כמות (שעות/יחידות) ותעריף (₪ לשעה/יחידה)
3. **עמודה שמאלית**: סכום כולל - **זה מה שאנחנו רוצים!**

⚠️ חוקי זהב לזיהוי (מתוקן):
1. **הסכום הרלוונטי הוא בעמודה השמאלית, לא הימנית!**
2. ספרות עם מינוס (-) = ניכויים (התעלם)
3. ספרות חיוביות = הכנסות (חשוב!)
4. שעות עבודה בדרך כלל 1-200
5. תעריפי שעה בדרך כלל 25-500 ₪
6. **אם יש כמה עמודות מספרים - קח את השמאלית ביותר כסכום סופי**

🏷️ סיווג לקטגוריות - **עודכן וחודד**:

**⚠️ כללי עדיפות לסיווג (מחודדים ומחמירים):**
1. **אם בתיאור יש במדויק "נסיעות" או מילות מפתח נסיעה מפורשות - זה נסיעות**
2. **אם יש אחוזים מדויקים (125%, 150%, 175%, 200% וכו') בתיאור - זה שעות נוספות**
3. **אם יש במפורש "שעות נוספות" - זה שעות נוספות**
4. **אם זה קשור לחופשות, חגים, הבראה, מחלה (ללא אחוזים) - זה "אחר"**
5. **אם זה שכר בסיס או תוספות קבועות - זה רגיל**
6. **בכל ספק - העדיפות היא: נסיעות > שעות נוספות > רגיל > אחר**

**קטגוריה 1: רגיל**
- "שכר בסיס" / "משכורת" / "בסיס"
- "תוספת ותק" / "ותק"
- "תוספת השכלה" / "השכלה" / "תואר"
- "תוספת משפחה" / "משפחה" / "ילדים"
- "תוספת יוקר" / "יוקר מחיה"
- "תוספת מקום" / "מקום עבודה"
- **"תשלומים בגין משרה"** - זה רגיל!
- **"שעות חופשה"** - זה רגיל!
- **"ימי חגים"** - זה רגיל!
- **"תוספת צבורה"** - זה רגיל!
- **"הבראה"** - זה רגיל!
- **"מחלה"** - זה רגיל!
- **"תרומה עבור חג"** - זה רגיל!
- **"דמי חג"** - זה רגיל!
- **"פיצויי פיטורין"** - זה רגיל!
- **קטגוריה 4: אחר - כל מה שלא מתאים לקטגוריות האחרות**
**⚠️ הקטגוריה שקולטת הכי הרבה פריטים:**
- **חופשות**: חופשה, שעות חופשה, ימי חופשה, דמי חופשה
- **חגים**: חג, ימי חגים, תרומה עבור חג, דמי חג
- **הבראה**: הבראה, ימי הבראה, דמי הבראה  
- **מחלה**: מחלה, ימי מחלה, דמי מחלה
- **תוספות מיוחדות**: תוספת לילה, תוספת שבת (שאינן שעות נוספות מפורשות)
- **פיצויים**: פיצויי פיטורין, פיצויים
- **בונוסים**: בונוס, תמרוץ, הטבות
- **כל פריט שלא נכנס בבירור לקטגוריות הקודמות**

**עקרון מנחה לקטגוריית "אחר":**
אם יש ספק לגבי סיווג פריט - הוא הולך ל"אחר" ולא לשעות נוספות או נסיעות!

**קטגוריה 2: שעות נוספות - זיהוי קפדני מאוד**
**⚠️ רק אם יש במפורש את המילים המדויקות האלה:**
- **"שעות נוספות"** (חובה שתופיע המילה הזו!)
- **כל אחוז מעל 100%**: **"125%"** / **"150%"** / **"175%"** / **"200%"** / **"250%"** וכו'
- **"נוספות"** (רק אם זה מילה נפרדת, לא חלק ממילה אחרת)
- **כל תיאור המכיל אחוזים מדויקים כמו "323 שעות 150%" או "327 שעות 200%"**

**🚫 אסור להכניס לשעות נוספות:**
- **חופשה** / **שעות חופשה** / **ימי חופשה**
- **חג** / **ימי חגים** / **תרומה עבור חג** / **דמי חג**
- **הבראה** / **ימי הבראה** / **דמי הבראה**
- **מחלה** / **ימי מחלה** / **דמי מחלה**
- **לילה** / **תוספת לילה** (אלא אם מפורש "שעות נוספות לילה")
- **שבת** / **תוספת שבת** (אלא אם מפורש "שעות נוספות שבת")
- **צבירה** / **תוספת צבורה**
- **פיצויים** / **פיצויי פיטורין**
- כל דבר אחר שאינו מכיל במפורש "שעות נוספות" או אחוזים

**קטגוריה 3: נסיעות - זיהוי מדויק**
**רק אם יש במפורש את המילים האלה:**
- **"נסיעות"** (המילה המדויקת בלבד!)
- **"קילומטראז'"** / **"ק"מ"** / **"ק.מ"** / **"קילומטרים"**
- **"דמי נסיעה"** / **"הוצאות נסיעה"**
- **"דלק"** / **"בנזין"** (רק אם זה החזר דלק)
- **"תחבורה"** / **"מוניות"** (רק אם זה החזר תחבורה)
- **"החזר נסיעות"**

**🚫 אסור להכניס לנסיעות:**
- דברים שיש בהם רק מילים דומות אבל לא מדויקות
- פריטים שאין בהם אף אחת מהמילים המפורשות למעלה
- תוספות כלליות שאינן קשורות לנסיעה ממש

**כלל מיוחד לנסיעות:**
רק אם התיאור מכיל **במדויק** את המילה "נסיעות" או אחת מהמילים המפורשות - אז זה קטגוריית נסיעות

💰 חילוץ סכומים (מתוקן):
1. עבור על כל שורה בטבלה מימין לשמאל (כיוון עברית)
2. **זהה את הסכום בעמודה השמאלית ביותר (זה הסכום הסופי)**
3. אם יש כמה עמודות מספרים - הסכום הרלוונטי הוא השמאלי ביותר
4. בדוק שהסכום הגיוני (לא 0.01 על שכר בסיס)
5. אם יש כמות ותעריף באמצע - בדוק שהכפל נכון
6. סכום כל קטגוריה בסוף

השב בפורמט JSON מובנה:
{
  "employeeInfo": {
    "name": "שם מלא כפי שמופיע",
    "idNumber": "מספר ת.ז",
    "employeeNumber": "מספר עובד",
    "month": "חודש שנה",
    "company": "שם מעסיק"
  },
  "categories": {
    "regular": {
      "total": סכום_מספרי,
      "items": [{"description": "תיאור", "amount": סכום, "hours": שעות_אם_יש, "rate": תעריף_אם_יש}]
    },
    "overtime": {
      "total": סכום_מספרי,
      "items": [{"description": "תיאור", "amount": סכום, "hours": שעות, "rate": "125%"}]
    },
    "travel": {
      "total": סכום_מספרי,
      "items": [{"description": "תיאור", "amount": סכום, "units": יחידות_אם_יש}]
    },
    "other": {
      "total": סכום_מספרי,
      "items": [{"description": "תיאור", "amount": סכום}]
    }
  },
  "summary": {
    "totalIncome": סכום_כל_הקטגוריות,
    "netSalary": שכר_נטו_מהתלוש,
    "grossSalary": שכר_ברוטו_מהתלוש
  },
  "metadata": {
    "processingNotes": "הערות על איכות הזיהוי",
    "confidence": "גבוהה/בינונית/נמוכה",
    "warnings": ["אזהרות אם יש בעיות"]
  }
}

❗ חשוב מאוד (עודכן):
- **הסכום הרלוונטי תמיד בעמודה השמאלית ביותר!**
- **אם רואה "נסיעות 1.0 268 268" - ה-268 האחרון הוא הסכום הסופי והוא הולך לקטגוריית נסיעות!**
- **אל תסווג כשעות נוספות אלא אם יש במפורש "שעות נוספות" או אחוזים מדויקים!**
- **אל תסווג כנסיעות אלא אם יש במפורש מילות המפתח המדויקות לנסיעות!**
- **חופשה, חג, הבראה, מחלה, תוספות מיוחדות = תמיד "אחר"!**
- **בספק? סדר עדיפות: רגיל > אחר > נסיעות > שעות נוספות**
- אל תמציא מספרים!
- אם לא בטוח - שים 0 או null
- תמיד בדוק שהסכומים הגיוניים
- הוסף אזהרה אם משהו נראה לא נכון
- זכור: זה מסמך פיננסי רגיש!
- **אם יש 3-4 עמודות מספרים, הסכום הסופי הוא השמאלי ביותר**
- **דוגמה: "נסיעות" עם כמות 1.0, תעריף 268, סכום 268 → נסיעות: 268 ₪**

❗ חשוב מאוד (מתוקן):
- **הסכום הרלוונטי תמיד בעמודה השמאלית ביותר!**
- **אם רואה "נסיעות 1.0 268 268" - ה-268 האחרון הוא הסכום הסופי והוא הולך לקטגוריית נסיעות!**
- אל תמציא מספרים!
- אם לא בטוח - שים 0 או null
- תמיד בדוק שהסכומים הגיוניים
- הוסף אזהרה אם משהו נראה לא נכון
- זכור: זה מסמך פיננסי רגיש!
- **אם יש 3-4 עמודות מספרים, הסכום הסופי הוא השמאלי ביותר**
- **דוגמה: "נסיעות" עם כמות 1.0, תעריף 268, סכום 268 → נסיעות: 268 ₪**

עבד עכשיו על המסמך/התמונה שלפניך.`
            },
            // Support both PDF documents and images
            mediaType === 'application/pdf' ? {
              type: "document",
              source: {
                type: "base64",
                media_type: mediaType,
                data: base64Data
              }
            } : {
              type: "image",
              source: {
                type: "base64",
                media_type: mediaType,
                data: base64Data
              }
            }
          ]
        }
      ]
    };

    const response = await fetch('https://api.anthropic.com/v1/messages', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': claudeApiKey,
        'anthropic-version': '2023-06-01'
      },
      body: JSON.stringify(payload)
    });

    if (!response.ok) {
      const errorData = await response.json();
      return res.status(response.status).json({ 
        error: `Claude API Error: ${response.status} - ${errorData.error?.message || 'Unknown error'}` 
      });
    }

    const data = await response.json();
    const responseText = data.content[0].text;
    
    // Clean response if there's extra text
    const cleanedResponse = responseText.replace(/```json|```/g, '').trim();
    
    // Extract JSON from response
    const jsonMatch = cleanedResponse.match(/\{[\s\S]*\}/);
    if (jsonMatch) {
      const result = JSON.parse(jsonMatch[0]);
      res.json(result);
    } else {
      res.status(400).json({ error: 'לא נמצא JSON תקין בתגובה' });
    }
  } catch (error) {
    console.error('שגיאה בעיבוד:', error);
    
    if (error.message.includes('rate_limit_exceeded')) {
      res.status(429).json({ error: 'חרגת ממגבלת הבקשות. נסה שוב בעוד כמה דקות.' });
    } else if (error.message.includes('invalid_api_key')) {
      res.status(401).json({ error: 'מפתח API לא תקין. בדוק את ההגדרות.' });
    } else if (error.message.includes('insufficient_quota')) {
      res.status(402).json({ error: 'אין מספיק יתרה בחשבון Claude.' });
    } else if (error instanceof SyntaxError) {
      res.status(400).json({ error: 'Claude החזיר תגובה לא תקינה. נסה שוב.' });
    } else {
      res.status(500).json({ error: `שגיאה בעיבוד התמונה: ${error.message}` });
    }
  }
});

// Health check endpoint
app.get('/api/health', (req, res) => {
  res.json({ status: 'OK', message: 'Server is running' });
});

app.listen(PORT, () => {
  console.log(`🚀 Payroll server running on http://localhost:${PORT}`);
});

module.exports = app;